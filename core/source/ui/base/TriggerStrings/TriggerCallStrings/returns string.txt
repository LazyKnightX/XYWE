XYConvertTimeStampToTime="转换UNIX时间戳为时间 [X]"
	XYConvertTimeStampToTime="转换 ",~UNIX时间戳," 为时间字符串"
	XYConvertTimeStampToTimeHint="时间字符串的格式为 年/月/日 时:分:秒，会自动进行 UTC+8 处理"
OperatorString="连接字符串"
	OperatorString=~字符串1," + ",~字符串2
	OperatorStringHint=
GetObjectName="物体名称 [C]"
	GetObjectName=~物体ID," 的名称"
	GetObjectNameHint="如'A01Z',物体编辑器中物体的名字"
SubStringBJ="截取字符串"
	SubStringBJ="截取 ",~字符串," 的 ",~Start," - ",~End," 字节部分"
	SubStringBJHint="例: 截取''Grunts stink''的2 - 4字节部分 = ''run''."
SubString="截取字符串 [C]"
	SubString="截取 ",~字符串," 的 ",~Start," - ",~End," 字节部分(不包括首字节)"
	SubStringHint="例: 截取''Grunts stink''的2 - 4字节部分 = ''un''."
YDWEGetPlayerColorString="附加上玩家颜色"
	YDWEGetPlayerColorString="|c[",~玩家,"]",~Start,"|r"
	YDWEGetPlayerColorStringHint=
YDWEId2S="转换Id为字符串"
	YDWEId2S="需要转换的Id为：",~整数
	YDWEId2SHint="将一个单位、物品等目标的Id转换成字符串；如'spsh'转换后为spsh。"
I2S="转换整数为字符串"
	I2S="转换 ",~Integer," 为字符串"
	I2SHint=
R2S="转换实数为字符串"
	R2S="转换 ",~Real," 为字符串"
	R2SHint=
YDWE_PreloadSL_GetFile="获取存档名(存档名单)"
	YDWE_PreloadSL_GetFile="为",~玩家,"在","『",~目录名,"』","下","，","获","取","索","引","为","[",~整数,"]","的","存","档","名"
	YDWE_PreloadSL_GetFileHint="高级功能，获取指定目录下某个玩家存档文件的名字，填写正确的索引，即可获得对应存档名。"
YDWEGetStringByInteger="获取 字符串 (整数路径)"
	YDWEGetStringByInteger="从存储目录-> ",~整数,"，标签-> ",~整数," 上获取字符串"
	YDWEGetStringByIntegerHint="通过输入的路径，系统会根据当前魔兽版本从缓存或HashTable上获取字符串数据。"
YDWEGetStringByString="获取 字符串 (字符串路径)"
	YDWEGetStringByString="从存储目录-> ",~字符串,"，标签-> ",~字符串," 上获取字符串"
	YDWEGetStringByStringHint="通过输入的路径，系统会根据当前魔兽版本从缓存或HashTable上获取字符串数据。"
R2SW="格式转换实数为字符串"
	R2SW="转换 ",~Real," 为字符串,最小宽度: ",~Width," ,小数位数: ",~Precision
	R2SWHint="如: 转换(1.234, 7, 2)后为''   1.23''. 转换(1.234, 2, 5)后为''1.23400''."
OrderId2StringBJ="转换命令ID为字符串"
	OrderId2StringBJ="转换 ",~Order," 为命令字符串"
	OrderId2StringBJHint="如''harvest'', ''move'', ''smart'', ''attack''都是命令字符串."
UnitId2StringBJ="转换单位类型为字符串"
	UnitId2StringBJ="转换 ",~单位类型," 为字符串"
	UnitId2StringBJHint=
GetLocalizedString="本地字符串 [C]"
	GetLocalizedString="本地字符串: ",~文字
	GetLocalizedStringHint="获取ui\framedef\globalstrings.fdf中定义的字符串."
StringIdentity="本地字符串"
	StringIdentity="本地字符串: ",~文字
	StringIdentityHint="获取ui\framedef\globalstrings.fdf中定义的字符串."
GetLocalizedHotkey="本地热键"
	GetLocalizedHotkey="本地热键: ",~文字
	GetLocalizedHotkeyHint="获取ui\miscui.txt中定义的热键."
StringCase="大小写转换"
	StringCase="转换 ",~字符串," 为 ",~Lower/Upper Case," 形式"
	StringCaseHint=
GetDestructableName="物件名字"
	GetDestructableName=~物件," 的名字"
	GetDestructableNameHint=
GetEventPlayerChatString="输入的聊天信息"
	GetEventPlayerChatString="输入的聊天信息"
	GetEventPlayerChatStringHint=
GetEventPlayerChatStringMatched="匹配的聊天信息"
	GetEventPlayerChatStringMatched="匹配的聊天信息"
	GetEventPlayerChatStringMatchedHint=
GetSaveBasicFilename="存档文件名"
	GetSaveBasicFilename="存档文件名"
	GetSaveBasicFilenameHint="响应'游戏 - 保存进度'事件."
GetAbilityName="技能名称"
	GetAbilityName=~技能," 的名称"
	GetAbilityNameHint=
GetAbilityEffectBJ="技能效果路径名"
	GetAbilityEffectBJ=~技能," 的 ",~EffectType," 路径名(序号: ",~Index,")"
	GetAbilityEffectBJHint="返回技能效果的模型路径,不管该效果是否存在.实际上就是技能编辑器中按Ctrl+D看到的文本内容. 该效果有多个模型时,序号表示取哪一个模型,如果该序号对应的文本内容不存在则返回上一序号."
GetAbilitySoundBJ="技能音效名"
	GetAbilitySoundBJ=~技能," 的 ",~SoundType," 名字"
	GetAbilitySoundBJHint="同样,实际上就是技能编辑器中按Ctrl+D看到的文本内容."
GetStoredString="读取字符串 [C]"
	GetStoredString="从 ",~Game Cache," 中读取字符串,类别: ",~Category," 名称: ",~文字
	GetStoredStringHint="如果该值不存在,则返回空字符串. 注意,空字符串不等于null"
GetHeroProperName="英雄称谓"
	GetHeroProperName=~Hero," 的称谓"
	GetHeroProperNameHint="如圣骑士会返回'无惧的布赞恩'而不是'圣骑士'."
MultiboardGetTitleText="多面板标题"
	MultiboardGetTitleText=~Multiboard," 的标题"
	MultiboardGetTitleTextHint=
GetPlayerName="玩家名字"
	GetPlayerName=~Player," 的名字"
	GetPlayerNameHint=
GetTriggerName="触发名字"
	GetTriggerName="当前触发的名字"
	GetTriggerNameHint=
GetUnitName="单位名字"
	GetUnitName=~单位," 的名字"
	GetUnitNameHint=
GetItemName="物品名字"
	GetItemName=~物品," 的名字"
	GetItemNameHint=
GetStoredStringBJ="读取字符串"
	GetStoredStringBJ="从游戏缓存读取字符串,名称: ",~文字," 类别: ",~Category," 缓存: ",~Game Cache
	GetStoredStringBJHint="原版UI，英文的语序的关系，为了使UI读起来更流畅，添加了一层封装，但这对中文来说就是画蛇添足了"
GetDYCChargeName="冲锋名称 [D]"
	GetDYCChargeName="本次冲锋名称"
	GetDYCChargeNameHint="响应'被冲锋'、'完成冲锋'或'停止冲锋'事件 （来自DYC 1.03）"
YDWEGetObjectPropertyString="物体属性 (字符串) [JAPI]"
	YDWEGetObjectPropertyString="[",~类型,"]",~物体," 的 ",~属性名,""
	YDWEGetObjectPropertyStringHint="属性名也就是物体编辑器里按Ctrl+D后看到的英文名 (WMUI: JAPI函数需要JAPI环境，因此慎用！)"
YDWEGetUnitAbilityDataString="技能数据 (字符串) [JAPI]"
	YDWEGetUnitAbilityDataString=~单位," 的 ",~技能," 第 ",~等级," 级的 ",~数据
	YDWEGetUnitAbilityDataStringHint="(WMUI: JAPI函数需要JAPI环境，因此慎用！)"
YDWEGetItemDataString="物品数据 (字符串) [JAPI]"
	YDWEGetItemDataString=~物品," 的 ",~数据
	YDWEGetItemDataStringHint=""