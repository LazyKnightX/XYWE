# CreateNUnitsAtLoc="创建单位(面向角度) [C]"
	 CreateNUnitsAtLoc="创建 ",~Number," 个 ",~单位," 给 ",~Player," 在 ",~指定点," ,面向角度为 ",~Direction," 度"
	 CreateNUnitsAtLocHint="面向角度采用角度制,0度为正东方向,90度为正北方向. 使用'最后创建的单位组'来获取创建的所有单位. 使用'最后创建的单位'来获取创建的单个单位."
CreateGroup="新建的单位组 [C]"
	CreateGroup="新建的空单位组"
	CreateGroupHint="会创建单位组."
GetLastCreatedGroup="最后创建的单位组"
	GetLastCreatedGroup="最后创建的单位组"
	GetLastCreatedGroupHint="最后一批通过'单位 - 创建'动作创建的单位."
YDWEGetGroupByInteger="获取 单位组 (整数路径)"
	YDWEGetGroupByInteger="从存储目录-> ",~整数,"，标签-> ",~整数," 上获取单位组"
	YDWEGetGroupByIntegerHint="通过输入的路径，系统会根据当前魔兽版本从缓存或HashTable上获取单位组数据。"
YDWEGetGroupByString="获取 单位组 (字符串路径)"
	YDWEGetGroupByString="从存储目录-> ",~字符串,"，标签-> ",~字符串," 上获取单位组"
	YDWEGetGroupByStringHint="通过输入的路径，系统会根据当前魔兽版本从缓存或HashTable上获取单位组数据。"
GetRandomSubGroup="单位组中随机单位"
	GetRandomSubGroup="随机获取 ",~Count," 个单位从 ",~单位组
	GetRandomSubGroupHint="会创建单位组.该函数不能使用设置 bj_wantDestroyGroup=true来清除group,会导致该动作无效."
GetUnitsInRectAll="矩形区域内的单位"
	GetUnitsInRectAll=~矩形区域," 内的所有单位"
	GetUnitsInRectAllHint="会创建单位组."
GetUnitsInRectOfPlayer="矩形区域内的玩家单位"
	GetUnitsInRectOfPlayer=~矩形区域," 内属于 ",~Player," 的所有单位"
	GetUnitsInRectOfPlayerHint="会创建单位组."
GetUnitsInRectMatching="矩形区域内的单位(指定条件)"
	GetUnitsInRectMatching=~矩形区域," 内满足 ",~条件," 的所有单位"
	GetUnitsInRectMatchingHint="使用'匹配单位'指代条件中用于比较的单位. 会创建单位组."
GetUnitsInRangeOfLocAll="圆范围内单位"
	GetUnitsInRangeOfLocAll="半径为 ",~Radius," 圆心为 ",~指定点," 的圆范围内所有单位"
	GetUnitsInRangeOfLocAllHint="会创建单位组."
GetUnitsInRangeOfLocMatching="圆范围内单位(指定条件)"
	GetUnitsInRangeOfLocMatching="半径为 ",~Radius," 圆心为 ",~指定点," 且满足 ",~条件," 的所有单位"
	GetUnitsInRangeOfLocMatchingHint="使用'匹配单位'指代条件中用于比较的单位. 会创建单位组."
WMGetGroup="指定坐标扇形内的单位 [W]"
	WMGetGroup="以坐标(",~x,",",~y,")为中心，选取角度为",~角度,"方向为",~角度,"，范围为",~实数,"内的所有单位"
	WMGetGroupHint="会创建单位组.可以被最后创建的单位组所获取"
GetUnitsOfPlayerAll="玩家单位"
	GetUnitsOfPlayerAll="属于 ",~Player," 的所有单位"
	GetUnitsOfPlayerAllHint="会创建单位组."
GetUnitsOfPlayerAndTypeId="玩家单位(指定单位类型)"
	GetUnitsOfPlayerAndTypeId="属于 ",~Player," 的所有 ",~单位类型
	GetUnitsOfPlayerAndTypeIdHint="会创建单位组."
GetUnitsOfPlayerMatching="玩家单位(指定条件)"
	GetUnitsOfPlayerMatching="属于 ",~Player," 并满足 ",~条件," 的所有单位"
	GetUnitsOfPlayerMatchingHint="使用'匹配单位'指代条件中用于比较的单位. 会创建单位组."
GetUnitsOfTypeIdAll="所有指定类型单位"
	GetUnitsOfTypeIdAll="所有 ",~单位类型
	GetUnitsOfTypeIdAllHint="会创建单位组."
GetUnitsSelectedAll="玩家选择单位"
	GetUnitsSelectedAll=~Player," 选择的所有单位"
	GetUnitsSelectedAllHint="不能用于触发条件. 会创建单位组."