ReturnUnitID=指定单位 [S]
	ReturnUnitID=~单位
	ReturnUnitIDHint=""
#   ReturnType=物品类型 [S]
	   ReturnType=~物品类型
	   ReturnTypeHint=""
#   ReturnType_0=转换类型ID为对象ID [S]
	   ReturnType_0="转换",~类型ID,"为对象ID"
	   ReturnType_0Hint=""
#  GetTypeId=转换类型名为对象ID [S]
	  GetTypeId="转换",~类型名,"为对象ID"
	  GetTypeIdHint=""
# ReturnUnitID=指定单位 [S]
	 ReturnUnitID=~单位
	 ReturnUnitIDHint=""
#  ReturnType_0=物品类型 [S]
	  ReturnType_0=~物品类型
	  ReturnType_0Hint=""
# ReturnType_0=技能类型 [S]
	 ReturnType_0=~技能
	 ReturnType_0Hint=""
ReturnType_0=单位类型 [S]
	ReturnType_0=~单位类型
	ReturnType_0Hint=""
#     ReturnType=转换整数为类型ID [S]
	     ReturnType="转换",~整数,"为类型ID"
	     ReturnTypeHint=""
#      ReturnType=转换整数为类型ID [S]
	      ReturnType="转换",~整数,"为类型ID"
	      ReturnTypeHint=""
# GetTypeId=转换类型名为类型ID [S]
	 GetTypeId="转换",~类型名,"为类型ID"
	 GetTypeIdHint=""
# ReturnType=转换整数为类型ID [S]
	 ReturnType="转换整数",~11,"为类型ID"
	 ReturnTypeHint=""
Probability=概率事件成立 [S]
	Probability="设置概率为：",~a
	ProbabilityHint="比如输入数据20，则20%概率该项成立。"
GetSkillHalfDamageBoolean=单位能否化解自定义技能伤害（需加载） [S]
	GetSkillHalfDamageBoolean="获取单位",~单位类型,"是否能化解一半技能伤害"
	GetSkillHalfDamageBooleanHint="只有开启系统默认触发和加载默认数据时才能使用。"
GetUnitThumpDamageBool=单位是否被暴击(需加载) [S]
	GetUnitThumpDamageBool=~单位,"是否被暴击"
	GetUnitThumpDamageBoolHint=""
GetUnitDodgeDamageBool=单位是否闪避（需加载） [S]
	GetUnitDodgeDamageBool=~单位,"是否闪避"
	GetUnitDodgeDamageBoolHint="不包括普通攻击的闪避。"
GetUnitHalfDamageBool=单位是否化解伤害(需加载) [S]
	GetUnitHalfDamageBool=~单位,"是否化解伤害"
	GetUnitHalfDamageBoolHint=""
GetTypeId=获取类型名的类型ID [S]
	GetTypeId="获取",~类型名,"的类型ID"
	GetTypeIdHint=""
GetHatredUnitIndex=获取伤害来源在仇恨列表索引 [S]
	GetHatredUnitIndex="获取受伤单位",~受伤单位,"的仇恨列表中伤害来源单位",~伤害来源,"的索引值。"
	GetHatredUnitIndexHint=""
GetMaxIndex=索引系统 - 获取对象拥有过的最大索引数 [S]
	GetMaxIndex="获取对象",~对象ID,"拥有过的最大索引数。"
	GetMaxIndexHint="获取对象拥有过的最大索引数。"
CreateIndex=索引系统 - 为对象分配索引值 [S]
	CreateIndex="为对象",~对象ID,"分配唯一索引值。"
	CreateIndexHint="为对象分配一个唯一索引值。"
GetType=获取对象的类型的整数类型数据 [S]
	GetType="获取对象",~对象,"的类型",~类型,"的整数型数据"
	GetTypeHint="这里对象指的是单位、物体或技能的ID。获取的数据也可以是另外一个类型ID，不过获取的ID是实数，要转换为整数。"
GetItemTypeNumberMax=获取物品附加类型的可持有数量（需加载） [S]
	GetItemTypeNumberMax="获取物品附加类型",~类型名,"的可持有数量"
	GetItemTypeNumberMaxHint=""
GetHalfDamageFactor=获取单位普通伤害化解率（需加载） [S]
	GetHalfDamageFactor="获取单位",~单位类型,"的普通伤害化解概率"
	GetHalfDamageFactorHint="只有开启系统默认触发和加载默认数据时才能使用。"
GetSkillHalfDamageFactor=获取单位自定义技能伤害化解率（需加载） [S]
	GetSkillHalfDamageFactor="获取单位",~单位类型,"的自定义技能伤害化解概率"
	GetSkillHalfDamageFactorHint="只有开启系统默认触发和加载默认数据时才能使用。"
GetUnitData=获取指定单位属性改变量（需加载） [S]
	GetUnitData="获取",~单位,"的",~属性类型,"类型的数值改变量"
	GetUnitDataHint="该量用于模拟状态造成的属性变化。"
GetReduceDamagePercent=获取减伤百分比（需加载） [S]
	GetReduceDamagePercent="获取",~对象类型,"的减伤百分比"
	GetReduceDamagePercentHint="可填入单位ID，物品ID。"
GetIncreaseDamagePercent=获取增伤百分比（需加载） [S]
	GetIncreaseDamagePercent="获取",~对象类型,"的增伤百分比"
	GetIncreaseDamagePercentHint="可填入单位ID，物品ID。"
GetReduceDamage=获取伤害修改值（需加载） [S]
	GetReduceDamage="获取",~对象类型,"的伤害修改值"
	GetReduceDamageHint="可填入单位ID，物品ID。"
GetTypeData=获取对象的类型的实数类型数据 [S]
	GetTypeData="获取对象",~对象,"的类型",~类型,"的实数型数据"
	GetTypeDataHint="这里对象指的是单位、物体或技能的ID。获取的数据也可以是另外一个类型ID，不过获取的ID是实数，要转换为整数。"
CountMeleeOriginalDamageMain=计算原始普通伤害（伤害类型可选）（需加载） [S]
	CountMeleeOriginalDamageMain="以攻击类型：",~攻击类型,"，伤害来源为：",~伤害来源,"，接受伤害单位为：",~受害单位,"，来源伤害值为：",~伤害值,"计算原始普通伤害。"
	CountMeleeOriginalDamageMainHint="配合模拟伤害使用即可造成伤害。（不能触发普通伤害事件。）"
CountSkillOriginalDamageMain=计算原始技能伤害（伤害类型可选）（需加载） [S]
	CountSkillOriginalDamageMain="以技能",~技能,"，伤害类型为：",~伤害类型,"，伤害来源为：",~伤害来源,"，接受伤害单位为：",~受伤单位,"，伤害来源值为：",~伤害值,"，计算原始技能伤害。"
	CountSkillOriginalDamageMainHint="配合模拟伤害使用即可造成伤害。(不会触发技能伤害事件，如要触发事件请在模拟伤害前加上对目标0.01的法术伤害即可。)"
MeleeOriginalDamageMain=用系统默认方法计算普通伤害（需加载） [S]
	MeleeOriginalDamageMain="用系统默认方法计算普通伤害--伤害来源：",~伤害来源,"；伤害目标：",~伤害目标,"。"
	MeleeOriginalDamageMainHint="根据单位绑定数据直接计算。（不能触发普通伤害事件。）"
SkillOriginalDamageMain=用系统默认方法计算自定义技能的伤害（需加载） [S]
	SkillOriginalDamageMain="用系统默认方法计算自定义技能的伤害--伤害产生的技能：",~技能,"；伤害来源：",~伤害来源,"；伤害目标：",~伤害目标,"。"
	SkillOriginalDamageMainHint="根据技能及单位绑定数据直接计算。(不会触发技能伤害事件，如要触发事件请在模拟伤害前加上对目标0.01的法术伤害即可。)"
GetUnitDamageBeforeMimeticd=接受伤害前的伤害值(需加载) [S]
	GetUnitDamageBeforeMimeticd=~受伤单位,"被伤害前计算的伤害值"
	GetUnitDamageBeforeMimeticdHint="获取单位在被造成伤害前计算出的伤害值。"
GetEventDamageZJ=原始伤害值 [S]
	GetEventDamageZJ="原始伤害值"
	GetEventDamageZJHint="获取的是魔兽原始伤害值，不是该系统的伤害值。"
GetUnitMimeticdDamage=模拟伤害值 [S]
	GetUnitMimeticdDamage="获取",~受到伤害单位,"受到的模拟伤害"
	GetUnitMimeticdDamageHint="获取模拟的伤害值。"
TypeId2S=转换类型ID为类型名 [S]
	TypeId2S="转换",~类型ID,"为类型名"
	TypeId2SHint=""
GetItemTypeName=获取物品类型的附加类型（需加载） [S]
	GetItemTypeName="获取",~物品类型,"的附加类型"
	GetItemTypeNameHint=""
GetEventDamagedUnitZJ=被伤害单位 [S]
	GetEventDamagedUnitZJ="被伤害单位"
	GetEventDamagedUnitZJHint=""
GetEventDamageSourceZJ=伤害来源单位 [S]
	GetEventDamageSourceZJ="伤害来源单位"
	GetEventDamageSourceZJHint=""
GetSystemHashtable=获取伤害系统主哈希表 [S]
	GetSystemHashtable="获取伤害系统主哈希表"
	GetSystemHashtableHint="该功能为高级自定义使用。"
GetItemSystemHashtable=获取伤害系统物品附属系统哈希表 [S]
	GetItemSystemHashtable="获取伤害系统物品附属系统哈希表"
	GetItemSystemHashtableHint="该功能为高级自定义使用。"