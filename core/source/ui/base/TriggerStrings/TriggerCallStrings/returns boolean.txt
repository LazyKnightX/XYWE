YDWEIsTriggerEventId="判断触发的事件"
	YDWEIsTriggerEventId="当前触发的事件为 ",~事件
	YDWEIsTriggerEventIdHint="任意单位事件 等于 玩家单位事件，指定单位事件 等于 单位事件"
 UnitAddAbility="添加技能 [C]"
	 UnitAddAbility="为 ",~单位," 添加 ",~技能
	 UnitAddAbilityHint="添加成功返回true."
 UnitRemoveAbility="删除技能 [C]"
	 UnitRemoveAbility="为 ",~单位," 删除 ",~技能
	 UnitRemoveAbilityHint="删除成功返回true."
YDWEHaveSavedAnyTypeDataByUserData="拥有自定义值"
	YDWEHaveSavedAnyTypeDataByUserData="{",~类型,"}",~null," 拥有 {",~类型,"}"~属性
	YDWEHaveSavedAnyTypeDataByUserDataHint="判断某个数据的自定义值是否存在，如： {单位}恶魔猎手 拥有 {物品}圣剑"
YDWEGetBooleanByInteger="获取 布尔值 (整数路径)"
	YDWEGetBooleanByInteger="从存储目录-> ",~整数,"，标签-> ",~整数," 上获取布尔值"
	YDWEGetBooleanByIntegerHint="通过输入的路径，系统会根据当前魔兽版本从缓存或HashTable上获取布尔值数据。"
YDWEGetBooleanByString="获取 布尔值 (字符串路径)"
	YDWEGetBooleanByString="从存储目录-> ",~字符串,"，标签-> ",~字符串," 上获取布尔值"
	YDWEGetBooleanByStringHint="通过输入的路径，系统会根据当前魔兽版本从缓存或HashTable上获取布尔值数据。"
YDWEIsItemSwitch="单位切换背包"
	YDWEIsItemSwitch=~单位," 正在切换背包"
	YDWEIsItemSwitchHint="判断单位是否在切换背包，避免单位切换背包时触发获得和掉落物品事件。"
IsDestructableAliveBJ="可破坏物存活"
	IsDestructableAliveBJ=~可破坏物," 是存活的"
	IsDestructableAliveBJHint=""
IsDestructableDeadBJ="可破坏物死亡"
	IsDestructableDeadBJ=~可破坏物," 是死亡的"
	IsDestructableDeadBJHint=""
IsDestructableInvulnerableBJ="物件无敌"
	IsDestructableInvulnerableBJ=~物件," 是无敌的"
	IsDestructableInvulnerableBJHint=
IsPointBlighted="坐标被荒芜地表覆盖 [C]"
	IsPointBlighted="坐标(",~X,",",~Y,")被荒芜地表覆盖"
	IsPointBlightedHint=
IsPointBlightedBJ="点被荒芜地表覆盖"
	IsPointBlightedBJ=~指定点," 被荒芜地表覆盖"
	IsPointBlightedBJHint=
IsTerrainPathable="地形通行状态关闭(指定坐标) [C]"
	IsTerrainPathable="坐标(",~X,",",~Y,")处的 ",~Pathing Type," 通行状态为关闭"
	IsTerrainPathableHint="指定类型单位不能通行即通行状态为关闭. 如该点不能造建筑就是'建造'通行状态为关闭. 可使用'环境 - 设置地形通行状态'来改变通行状态."
IsTerrainDeepWater="地形为深水 [W]"
	IsTerrainDeepWater="坐标(",~X,",",~Y,")处为深水
	IsTerrainDeepWaterHint="原作者:Rising_Dusk"
IsTerrainShallowWater="地形为浅水 [W]"
	IsTerrainShallowWater="坐标(",~X,",",~Y,")处为浅水
	IsTerrainShallowWaterHint="原作者:Rising_Dusk"
IsTerrainLand="地形为陆地 [W]"
	IsTerrainLand="坐标(",~X,",",~Y,")处为陆地
	IsTerrainLandHint="原作者:Rising_Dusk"
IsTerrainPlatform="地形为平台 [W]"
	IsTerrainPlatform="坐标(",~X,",",~Y,")处为平台
	IsTerrainPlatformHint="原作者:Rising_Dusk"
IsTerrainWalkable="地形可通行 [W]"
	IsTerrainWalkable="坐标(",~X,",",~Y,")处可通行
	IsTerrainWalkableHint="原作者:Rising_Dusk"
IsTerrainPathableBJ="地形通行状态关闭(指定点)"
	IsTerrainPathableBJ=~指定点," 处的 ",~Pathing Type," 通行状态为关闭"
	IsTerrainPathableBJHint="指定类型单位不能通行即通行状态为关闭. 如该点不能造建筑就是'建造'通行状态为关闭. 可使用'环境 - 设置地形通行状态'来改变通行状态."
IsMapFlagSet="地图参数设置"
	IsMapFlagSet=~Map Flag," 已设置"
	IsMapFlagSetHint=
IsCustomCampaignButtonVisibile="自定义战役按钮可见"
	IsCustomCampaignButtonVisibile="自定义战役按钮# ",~Number," 可见"
	IsCustomCampaignButtonVisibileHint=
GetCreepCampFilterState="小地图中立生物显示开启"
	GetCreepCampFilterState="小地图中立生物显示开启"
	GetCreepCampFilterStateHint=
SaveGameExists="游戏存档存在"
	SaveGameExists=~存档文件," 已存在"
	SaveGameExistsHint=
IsNoVictoryCheat="无法胜利 [C]"
	IsNoVictoryCheat="玩家开启作弊模式: 无法胜利"
	IsNoVictoryCheatHint="单机作弊码开启的模式."
IsNoDefeatCheat="无法失败 [C]"
	IsNoDefeatCheat="玩家开启作弊模式: 无法失败"
	IsNoDefeatCheatHint="单机作弊码开启的模式."
GetStoredBoolean="读取布尔值 [C]"
	GetStoredBoolean="从",~Game Cache,"中读取布尔值,类别: ",~Category,",名称: ",~文字
	GetStoredBooleanHint="如果该值不存在则返回false."
HaveStoredValue="缓存项存在"
	HaveStoredValue="名称为 "~文字," 的 ",~Type," 类缓存项被保存在类别: ",~Category," 缓存: ",~Game Cache
	HaveStoredValueHint=
HaveSavedValue="哈希项存在"
	HaveSavedValue="子索引为 ",~Value," 的 ",~Type," 类数据被保存在主索引为 ",~Value," 的 ",~Hashtable," 中"
	HaveSavedValueHint=
UnitHasItem="持有物品"
	UnitHasItem=~Hero," 拥有 ",~物品
	UnitHasItemHint=
UnitHasItemOfTypeBJ="持有物品(指定类型)"
	UnitHasItemOfTypeBJ=~Hero," 拥有 ",~物品类型
	UnitHasItemOfTypeBJHint=
IsSuspendedXP="经验不可获得"
	IsSuspendedXP=~Hero," 不可获得经验"
	IsSuspendedXPHint="可使用'英雄 - 允许/禁止经验获取'来设置该项."
CheckItemStatus="物品状态检查"
	CheckItemStatus=~物品," 是 ",~Status," 的"
	CheckItemStatusHint=
CheckItemcodeStatus="物品类型状态检查"
	CheckItemcodeStatus=~物品类型," 是 ",~Status," 的"
	CheckItemcodeStatusHint=
IsItemVisible="物品可见 [C]"
	IsItemVisible=~物品," 是可见的"
	IsItemVisibleHint="物品不被隐藏且不被单位持有时即为可见的."
IsItemHiddenBJ="物品隐藏"
	IsItemHiddenBJ=~物品," 是隐藏的"
	IsItemHiddenBJHint="单位持有的物品也被认为是隐藏的. 建议使用物品可见=False来作判断."
IsItemOwned="物品被持有"
	IsItemOwned=~物品," 是被持有的"
	IsItemOwnedHint="在物品栏中的物品都是被持有的. 就算单位正处于死亡状态."
IsItemPowerup="物品是拾取时自动使用的 [C]"
	IsItemPowerup=~物品," 是拾取时自动使用类物品"
	IsItemPowerupHint=
IsItemSellable="物品可被市场随机出售 [C]"
	IsItemSellable=~物品," 可被市场随机出售"
	IsItemSellableHint=
IsItemPawnable="物品可被抵押 [C]"
	IsItemPawnable=~物品," 可被抵押"
	IsItemPawnableHint=
RectContainsItem="物品在矩形区域"
	RectContainsItem=~物品," 在 ",~矩形区域
	RectContainsItemHint="单位持有的物品不会被计算在内."
IsItemInvulnerable="物品无敌"
	IsItemInvulnerable=~物品," 是无敌的"
	IsItemInvulnerableHint=
LeaderboardHasPlayerItemBJ="玩家在排行榜"
	LeaderboardHasPlayerItemBJ=~Leaderboard," 中包含 ",~Player
	LeaderboardHasPlayerItemBJHint=
IsMultiboardDisplayed="多面板显示"
	IsMultiboardDisplayed=~Multiboard," 是显示的"
	IsMultiboardDisplayedHint=
IsMultiboardMinimized="多面板最小化"
	IsMultiboardMinimized=~Multiboard," 是最小化的"
	IsMultiboardMinimizedHint=
WaygateIsActiveBJ="传送门激活"
	WaygateIsActiveBJ=~传送门," 处于激活状态"
	WaygateIsActiveBJHint=
IsPlayerFlagSetBJ="玩家参数开启"
	IsPlayerFlagSetBJ=~Player Flag," 为允许,对 ",~Player
	IsPlayerFlagSetBJHint=
IsPlayerAlly="是玩家的盟友"
	IsPlayerAlly=~Player," 是 ",~Player," 的盟友"
	IsPlayerAllyHint="包括中立状态. 单向判断玩家A对玩家B联盟不侵犯,即表示玩家A是玩家B的盟友."
IsPlayerEnemy="是玩家的敌人"
	IsPlayerEnemy=~Player," 是 ",~Player," 的敌人"
	IsPlayerEnemyHint="不包括中立状态. 单向判断玩家A对玩家B敌对侵犯,即表示玩家A是玩家B的盟友."
IsPlayerObserver="玩家是裁判或观察者 [C]"
	IsPlayerObserver=~Player,"是裁判或观察者"
	IsPlayerObserverHint=
IsPlayerRacePrefSet="玩家的种族选择"
	IsPlayerRacePrefSet=~Player," 选择了 ",~RacePreference
	IsPlayerRacePrefSetHint=
GetPlayerAlliance="联盟状态设置"
	GetPlayerAlliance=~Player," 对 ",~Player," 开启 ",~Alliance Type
	GetPlayerAllianceHint=
IsPlayerInForce="在玩家组"
	IsPlayerInForce=~Player," 在 ",~玩家组," 中"
	IsPlayerInForceHint=
IsQuestItemCompleted="任务项目完成"
	IsQuestItemCompleted=~Quest Requirement," 已完成"
	IsQuestItemCompletedHint=
IsQuestEnabled="任务激活"
	IsQuestEnabled=~Quest," 已激活"
	IsQuestEnabledHint=
IsQuestCompleted="任务完成"
	IsQuestCompleted=~Quest," 已完成"
	IsQuestCompletedHint=
IsQuestFailed="任务失败"
	IsQuestFailed=~Quest," 失败"
	IsQuestFailedHint=
IsQuestDiscovered="任务被发现"
	IsQuestDiscovered=~Quest," 已被发现"
	IsQuestDiscoveredHint=
IsQuestRequired="是主要任务"
	IsQuestRequired=~Quest," 是主要任务"
	IsQuestRequiredHint=
RectContainsLoc="包含点"
	RectContainsLoc=~矩形区域," 内包含 ",~点
	RectContainsLocHint=
IsPointInRegion="包含坐标"
	IsPointInRegion=~不规则区域," 内包含坐标(",~X,",",~Y,")"
IsLocationInRegion="包含点"
	IsLocationInRegion=~不规则区域," 内包含点: ",~点
IsTriggerEnabled="触发开启"
	IsTriggerEnabled=~触发," 处于开启状态"
	IsTriggerEnabledHint=
TriggerEvaluate="触发条件成立"
	TriggerEvaluate=~触发," 的条件成立"
	TriggerEvaluateHint=
IsTriggerQueuedBJ="触发在队列中"
	IsTriggerQueuedBJ=~触发," 在队列中"
	IsTriggerQueuedBJHint="可使用'触发器 - 添加到队列'和'触发器 - 移出队列'动作来操作触发队列."
IsTriggerQueueEmptyBJ="触发队列为空"
	IsTriggerQueueEmptyBJ="触发队列为空"
	IsTriggerQueueEmptyBJHint="可使用'触发器 - 添加到队列'和'触发器 - 移出队列'动作来操作触发队列."
IsUnit="与指定单位是同一个单位"
	IsUnit=~单位," 与 ",~单位,"相同"
	IsUnitHint="用来判断两个单位是否相等。"
IsUnitDetected="被指定玩家检测到反隐形"
	IsUnitDetected=~单位," 处在 ",~玩家," 的真实视野范围内"
	IsUnitDetectedHint="用来判断单位在这个玩家反隐形范围内，注：不包含该玩家同盟的反隐范围。"
IsUnitType="单位类别检查"
	IsUnitType=~单位," 是 ",~Type
	IsUnitTypeHint=
IsUnitRace="单位种族检查"
	IsUnitRace=~单位," 是 ",~Race
	IsUnitRaceHint=
IsUnitIdType="单位类别检查(指定单位类型)"
	IsUnitIdType=~单位类型," 是 ",~Type
	IsUnitIdTypeHint=
IsHeroUnitId="单位类型是英雄单位"
	IsHeroUnitId=~UnitType," 是英雄单位"
IsUnitInGroup="在单位组内"
	IsUnitInGroup=~单位," 在 ",~单位组," 中"
	IsUnitInGroupHint=
IsUnitInRange="在指定单位范围内 [C]"
	IsUnitInRange=~单位," 在距离 ",~指定单位," ",~范围," 范围内"
	IsUnitInRangeHint=
IsUnitInRangeXY="在指定坐标范围内 [C]"
	IsUnitInRangeXY=~单位," 在距离坐标(",~X,",",~Y,") ",~范围," 范围内"
	IsUnitInRangeXYHint=
IsUnitInRangeLoc="在指定点范围内 [C]"
	IsUnitInRangeLoc=~单位," 在距离 ",~指定点," ",~范围," 范围内"
	IsUnitInRangeLocHint=
RectContainsUnit="在矩形区域内"
	RectContainsUnit=~矩形区域," 内存在 ",~单位
	RectContainsUnitHint=
IsUnitInRegion="在不规则区域内 [C]"
	IsUnitInRegion=~不规则区域," 内存在 ",~单位
	IsUnitInRegionHint=
IsUnitAliveBJ="单位处于存活状态"
	IsUnitAliveBJ=~单位," 是存活的"
	IsUnitAliveBJHint="使用 单位 - 单位存活 [W] 替代。（WMUI：实际上该函数是判断单位血量是否>0）"
UnitAlive="单位处于存活状态 [W]"
	UnitAlive=~单位," 是存活的"
	UnitAliveHint="WMUI：来自common.ai的native函数，比 单位 - 单位存活 精确"
IsUnitDeadBJ="单位处于死亡状态"
	IsUnitDeadBJ=~单位," 处于死亡状态"
	IsUnitDeadBJHint="实际上该函数是判断单位血量是否<=0."
IsUnitPausedBJ="单位处于暂停状态"
	IsUnitPausedBJ=~单位," 处于暂停状态"
	IsUnitPausedBJHint=
IsUnitHiddenBJ="单位处于隐藏状态"
	IsUnitHiddenBJ=~单位," 处于隐藏状态"
	IsUnitHiddenBJHint="可通过'单位 - 隐藏'动作来析藏单位. 运输机,灵魂之球,祭坛中的单位都被认为是隐藏状态."
IsUnitIllusionBJ="单位是镜像"
	IsUnitIllusionBJ=~单位," 是镜像单位"
	IsUnitIllusionBJHint=
UnitCanSleepPerm="允许控制睡眠状态"
	UnitCanSleepPerm="允许控制 "~单位," 的睡眠状态"
	UnitCanSleepPermHint="即该单位拥有'一直睡眠'技能."
UnitCanSleepBJ="允许夜晚睡眠"
	UnitCanSleepBJ=~单位," 会在夜晚进入睡眠"
	UnitCanSleepBJHint="中立生物才会睡眠."
UnitIsSleepingBJ="正在睡眠"
	UnitIsSleepingBJ=~单位," 正在睡眠"
	UnitIsSleepingBJHint="中立生物才会睡眠. 不包括催眠魔法."
DoesUnitGenerateAlarms="开启警报"
	DoesUnitGenerateAlarms=~单位," 处于开启警报状态"
	DoesUnitGenerateAlarmsHint=
IsUnitLoadedBJ="被装载"
	IsUnitLoadedBJ=~单位," 被装载中"
	IsUnitLoadedBJHint="被飞艇,船等有运输功能的单位装载."
IsUnitInTransportBJ="被指定单位装载"
	IsUnitInTransportBJ=~单位," 被 ",~运输机," 装载中"
	IsUnitInTransportBJHint=
IsUnitSelected="被玩家选择"
	IsUnitSelected=~单位," 被 ",~Player," 选择"
	IsUnitSelectedHint=
IsUnitAlly="是玩家的同盟单位"
	IsUnitAlly=~单位," 是 ",~Player," 的同盟单位"
	IsUnitAllyHint="包括中立状态. 单向判断玩家对单位是否为不侵犯状态."
IsUnitEnemy="是玩家的敌对单位"
	IsUnitEnemy=~单位," 是 ",~Player," 的敌对单位"
	IsUnitEnemyHint="不包括中立状态. 单向判断玩家对单位是否为敌对侵犯."
IsUnitOwnedByPlayer="是玩家的单位"
	IsUnitOwnedByPlayer=~单位," 属于 ",~Player
	IsUnitOwnedByPlayerHint="判断单位是否属于这个玩家。"
IsUnitInvulnerable="是无敌的 [W]"
	IsUnitInvulnerable=~单位,"是无敌的"
	IsUnitInvulnerableHint="会对该单位造成0.01点伤害.感谢金皮蛋"
IsUnitSpelling="正在施法 [W]"
	IsUnitSpelling=~单位,"正在施法"
	IsUnitSpellingHint="感谢金皮蛋"
IsUnitInForce="是玩家组里玩家的单位"
	IsUnitInForce=~单位," 属于 ",~玩家组," 里的玩家"
	IsUnitInForceHint="判断单位是否属于这个玩家组里的玩家。"
UnitHasBuffBJ="拥有魔法效果"
	UnitHasBuffBJ=~单位," 拥有 ",~魔法效果
	UnitHasBuffBJHint=
IsUnitGroupEmptyBJ="单位组为空"
	IsUnitGroupEmptyBJ=~单位组," 为空"
	IsUnitGroupEmptyBJHint=
IsUnitGroupInRectBJ="单位组中单位在矩形区域内"
	IsUnitGroupInRectBJ=~单位组," 中所有单位在 ",~矩形区域," 内"
	IsUnitGroupInRectBJHint=
IsUnitGroupDeadBJ="单位组中所有单位死亡"
	IsUnitGroupDeadBJ=~单位组," 中所有单位死亡"
	IsUnitGroupDeadBJHint=
IsFogEnabled="战争迷雾开启"
	IsFogEnabled="战争迷雾开启"
	IsFogEnabledHint=
IsFogMaskEnabled="黑色阴影开启"
	IsFogMaskEnabled="黑色阴影开启"
	IsFogMaskEnabledHint=
IsUnitVisible="单位对指定玩家可见"
	IsUnitVisible=~单位," 对 ",~Player," 可见"
	IsUnitVisibleHint=
IsUnitInvisible="单位对指定玩家不可见"
	IsUnitInvisible=~单位," 对 ",~Player," 不可见"
	IsUnitInvisibleHint=
IsUnitFogged="单位在指定玩家的迷雾中"
	IsUnitFogged=~单位," 在 ",~Player," 的迷雾范围内"
	IsUnitFoggedHint="黑色阴影内的单位不被计算在内."
IsUnitMasked="单位在指定玩家的黑色阴影中"
	IsUnitMasked=~单位," 在 ",~Player," 的黑色阴影内"
	IsUnitMaskedHint=
IsLocationVisibleToPlayer="点对玩家可见"
	IsLocationVisibleToPlayer=~指定点,"对 ",~Player," 可见"
	IsLocationVisibleToPlayerHint=
IsVisibleToPlayer="坐标对玩家可见"
	IsVisibleToPlayer="坐标(",~x,",",~y,") 对 ",~玩家," 可见"
	IsVisibleToPlayerHint=""
IsLocationFoggedToPlayer="点在指定玩家的迷雾中"
	IsLocationFoggedToPlayer=~指定点," 在 ",~Player," 的迷雾范围内"
	IsLocationFoggedToPlayerHint="黑色阴影内的点不被计算在内."
IsFoggedToPlayer="坐标在指定玩家的迷雾中"
	IsFoggedToPlayer="坐标(",~x,",",~y,") 在 ",~玩家," 的迷雾范围内"
	IsFoggedToPlayerHint="黑色阴影内的坐标不被计算在内。"
IsLocationMaskedToPlayer="点在指定玩家的黑色阴影中"
	IsLocationMaskedToPlayer=~指定点," 在 ",~Player," 的黑色阴影内"
	IsLocationMaskedToPlayerHint=
IsMaskedToPlayer="坐标在指定玩家的黑色阴影中"
	IsMaskedToPlayer="坐标(",~x,",",~y,") 在 ",~玩家," 的黑色阴影内"
	IsMaskedToPlayerHint=""
OperatorDegreeAdd="加 < ﹢ >"
	OperatorDegreeAdd=~角度," + ",~角度
	OperatorDegreeAddHint=
OperatorDegreeSubtract="减 < ﹣ >"
	OperatorDegreeSubtract=~角度," - ",~角度
	OperatorDegreeSubtractHint=
OperatorDegreeMultiply="乘 < × >"
	OperatorDegreeMultiply=~角度," × ",~实数
	OperatorDegreeMultiplyHint=
OperatorDegreeDivide="除 < ÷ >"
	OperatorDegreeDivide=~角度," ÷ ",~实数
	OperatorDegreeDivideHint=
OperatorRadianAdd="加 < ﹢ >"
	OperatorRadianAdd=~弧度," ﹢ ",~弧度
	OperatorRadianAddHint=
OperatorRadianSubtract="减 < ﹣ >"
	OperatorRadianSubtract=~弧度," ﹣ ",~弧度
	OperatorRadianSubtractHint=
OperatorRadianMultiply="乘 < × >"
	OperatorRadianMultiply=~弧度," × ",~实数
	OperatorRadianMultiplyHint=
OperatorRadianDivide="除 < ÷ >"
	OperatorRadianDivide=~弧度," ÷ ",~实数
	OperatorRadianDivideHint=
GetStoredBooleanBJ="游戏缓存 - 读取布尔值"
	GetStoredBooleanBJ="从游戏缓存读取布尔值,名称: ",~文字," 类别: ",~Category," 缓存: ",~Game Cache
	GetStoredBooleanBJHint="原版UI，英文的语序的关系，为了使UI读起来更流畅，添加了一层封装，但这对中文来说就是画蛇添足了"
YDWEPlatformIsInPlatform="地图在11平台上 [JAPI] [Y]"
	YDWEPlatformIsInPlatform="目前地图正在11平台上运行"
	YDWEPlatformIsInPlatformHint="判断地图是否在11平台上；此功能可以根据地图所在平台做出差异化操作。特别注意：此操作内含有等待。 (WMUI: JAPI函数需要JAPI环境，因此慎用！)"
YDWEIsEventPhysicalDamage="是物理伤害 [JAPI] [Y]"
	YDWEIsEventPhysicalDamage="单位所受伤害是物理伤害"
	YDWEIsEventPhysicalDamageHint="响应'受到伤害'单位事件,不能用在等待之后 (WMUI: JAPI函数需要JAPI环境，因此慎用！)"
YDWEIsEventAttackDamage="是攻击伤害 [JAPI] [Y]"
	YDWEIsEventAttackDamage="单位所受伤害是攻击伤害"
	YDWEIsEventAttackDamageHint="响应'受到伤害'单位事件,不能用在等待之后 (WMUI: JAPI函数需要JAPI环境，因此慎用！)"
YDWEIsEventRangedDamage="是远程伤害 [JAPI] [Y]"
	YDWEIsEventRangedDamage="单位所受伤害是远程伤害"
	YDWEIsEventRangedDamageHint="响应'受到伤害'单位事件,不能用在等待之后 (WMUI: JAPI函数需要JAPI环境，因此慎用！)"
YDWEIsEventDamageType="是伤害类型 [JAPI] [Y]"
	YDWEIsEventDamageType="单位所受伤害的伤害类型是 ",~伤害类型
	YDWEIsEventDamageTypeHint="响应'受到伤害'单位事件,不能用在等待之后 (WMUI: JAPI函数需要JAPI环境，因此慎用！)"
YDWEIsEventWeaponType="是武器类型 [JAPI] [Y]"
	YDWEIsEventWeaponType="单位所受伤害的武器类型是 ",~武器类型
	YDWEIsEventWeaponTypeHint="响应'受到伤害'单位事件,不能用在等待之后 (WMUI: JAPI函数需要JAPI环境，因此慎用！)"
YDWEIsEventAttackType="是攻击类型 [JAPI] [Y]"
	YDWEIsEventAttackType="单位所受伤害的攻击类型是 ",~攻击类型
	YDWEIsEventAttackTypeHint="响应'受到伤害'单位事件,不能用在等待之后 (WMUI: JAPI函数需要JAPI环境，因此慎用！)"